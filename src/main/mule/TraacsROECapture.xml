<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:java="http://www.mulesoft.org/schema/mule/java"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd">
	 <http:request-config
		name="HTTP_ROE_Capture_Configuration"
		basePath="${traacs.roe.url.path}"
		responseTimeout="${traacs.url.response.timeout}"
		doc:name="HTTP Request Configuration">
		<http:request-connection
			host="${traacs.roe.url.host}" port="${traacs.roe.url.port}"
			connectionIdleTimeout="${traacs.url.connection.timeout}"
			responseBufferSize="${traacs.url.response.timeout}" />
	</http:request-config>
	<http:request-config
		name="HTTP_ROE_Request_Configuration_EGP"
		basePath="${traacs.roe.url.path}"
		responseTimeout="${traacs.url.response.timeout}"
		doc:name="HTTP Request Configuration">
		<http:request-connection
			host="${traacs.roe.url.host}" port="${traacs.roe.url.port.eg}"
			connectionIdleTimeout="${traacs.url.connection.timeout}"
			responseBufferSize="${traacs.url.response.timeout}" />
	</http:request-config> 
	<flow name="TraacsROECaptureFlow" doc:id="795547e6-40b3-442e-a672-215a9630585b">
		<ee:transform doc:name="Byte Array to Object">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
        output application/java
        ---
        read(payload, "application/java")
    ]]></ee:set-payload>
			</ee:message>

		</ee:transform>
		<logger message="#[payload]" level="INFO" doc:name="Logger" />
		<set-payload
			value="#[output application/java --- payload]" doc:name="Set Payload" />
		<logger message="#[payload]" level="INFO" doc:name="Logger" />

		<!-- If needed, add a DataWeave transformation to convert JSON to object 
			here -->

		<scatter-gather doc:name="Scatter-Gather">
			 <route>
				<flow-ref name="SAR_FLOW" doc:name="SAR Flow" doc:id="7061e086-7e7c-4c2e-8840-e2bcef77be34"/>
			</route>
			<route>
				<flow-ref name="EGP_FLOW" doc:name="EGP Flow" />
			</route>
		</scatter-gather>
		<logger message="#[payload]" level="INFO" doc:name="Logger" />
	</flow>
	<flow name="SAR_FLOW" doc:id="96bd3244-30d7-48a7-bca2-0045fa9b9410">
		<java:invoke doc:name="TraacsRoeCaptureBean"
			class="com.ebreez.etrcs.traacs.roeCapture.TraacsRoeCapture"
			method="onCall(TraacsRoeRequest)" instance="TraacsRoeCaptureBeanId">
			<java:args ><![CDATA[#[{
	roeRQ:payload
}]]]></java:args>
		</java:invoke>

		<set-payload value="#[%dw 2.0 output application/json --- {json_data:payload}]"
			doc:name="Set Payload" />
		<logger message="#[payload]"
			level="INFO" doc:name="Logger" />


		<http:request method="POST" doc:name="HTTP"
			outputMimeType='application/x-www-form-urlencoded' url="${traacs.url}">
			<http:headers><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/x-www-form-urlencoded"
}]]]></http:headers>
		</http:request>


		 <ee:transform doc:name="Object to String">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
        output application/java
        ---
            payload as String
    ]]></ee:set-payload>
			</ee:message>
		</ee:transform>

		<logger message="#[payload]"
			level="INFO" doc:name="Logger" />
	</flow>
	<flow name="EGP_FLOW">
		 <java:invoke
			doc:name="TraacsRoeCaptureBeanEGP"
			class="com.ebreez.etrcs.traacs.roeCapture.TraacsRoeCaptureEGP"
			method="onCall()" instance="TraacsRoeCaptureBeanIdEGP">
			<java:args ><![CDATA[#[{
	roeRQ:payload
}]]]></java:args>
		</java:invoke>
		<set-payload value="#[%dw 2.0 output application/json --- {json_data:payload}]"
			doc:name="Set Payload" />
		<logger message="#[payload]"
			level="INFO" doc:name="Logger" />
		<http:request
			method="POST" doc:name="HTTP" url="${traacs.url}">
			<http:headers><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/x-www-form-urlencoded"
}]]]></http:headers>
		</http:request>
		<ee:transform doc:name="Object to String">
		<ee:message>
			<ee:set-payload><![CDATA[%dw 2.0
        output application/java
        ---
            payload as String]]></ee:set-payload>
    </ee:message>
		</ee:transform> 
		<logger message="payload"
			level="INFO" doc:name="Logger" />
	</flow>
</mule>